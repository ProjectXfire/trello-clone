// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Board {
  id String @id @default(uuid())
  orgId String
  title String
  imageId String
  imageThumUrl String @db.Text
  imageFullUrl String @db.Text
  imageUsername String @db.Text
  imageLinkHTML String @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lists List[]
}

model List {
  id String @id @default(uuid())
  title String
  order Int
  boardId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cards Card[]
  board Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
  @@index([boardId])
}

model Card {
  id String @id @default(uuid())
  title String
  order Int
  description String? @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  listId String
  list List @relation(fields: [listId], references: [id], onDelete: Cascade)
  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id String @id @default(uuid())
  orgId String
  action ACTION
  entityId String
  entityTitle String
  entityType ENTITY_TYPE
  userId String
  userImage String? @db.Text
  userName String? @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrgLimit {
  id String @id @default(uuid())
  orgId String @unique
  count Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrgSubscription {
  id String @id @default(uuid())
  orgId String @unique
  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_id")
}